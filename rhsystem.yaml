openapi: 3.0.3
info:
  title: rhsystem
  description: Documentação da API do sistema de RH
  version: 1.0.0
servers:
  - url: '127.0.0.1/rhsystem'
tags:
  - name: user
    description: User related data
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: A valid JWT sent by the login request
paths:
  /user/login:
    post:
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Successfull login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        401:
          description: Invalid credentials
      description: get a valid token for the user

  /user:
    post:
      tags:
        - user
      security:
        - bearerAuth : []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
                confirmPassword:
                  type: string
                email:
                  type: string
      responses:
        201:
          description: User succesfully created
        403:
          description: The informed token doesn't have the user:create permission
    get:
      tags:
        - user
      security:
        - bearerAuth: []
      responses:
        200:
          description: Paginated user list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    email:
                      type: string
        403:
          description: Returned when the token doesn't have the user:read permission
  /user/{id}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: query
          name: page
          required: false
          description: The requested page, if not informed, the default value is 1
          schema:
            type: integer
      responses:
        404:
          description: User not found
        200:
          description: Paginated user list
          content:
            application/json:
              schema:
                type: object
                properties:
                  pages:
                    type: integer
                    description: Number of avaliable pages
                  page:
                    type: integer
                    description: the requested page sent on the request
                  d:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        email:
                          type: string
                        permissions:
                          type: array
                          items:
                            type: string
        403:
          description: Returned when the token doesn't have the user:read permission and tries to get a user that is not himself
      tags:
        - user

  /logout:
    post:
      tags:
        - user
      security:
        - bearerAuth: []
      responses:
        204:
          description: Logout was successfull
        401:
          description: Returned when the informed token is already invalid